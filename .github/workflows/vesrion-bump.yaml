name: Build and Create Version Bump PR

on:
  push:
    branches:
      - test-release

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
#   build:
#     name: Build Docker Image
#     uses: ./.github/workflows/build-image.yaml

  version-bump:
    name: Bump Version and Open PR
    runs-on: ubuntu-latest
    # needs: build
    # if: success()

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate GitHub App Token
        uses: peter-murray/workflow-application-token-action@v2
        id: app-token
        with:
          application_id: ${{ secrets.APP_ID }}
          application_private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Get latest tag
        id: get_latest_tag
        run: |
          tag=$(git describe --tags --abbrev=0 || echo v0.0.0)
          echo "latest_tag=$tag" >> $GITHUB_ENV

      - name: Bump patch version
        id: bump
        run: |
          latest=${{ env.latest_tag }}
          IFS='.' read -r major minor patch <<< "${latest#v}"
          new_tag="v$major.$minor.$((patch + 1))"
          echo "new_tag=$new_tag" >> $GITHUB_ENV
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Update version references (excluding Dockerfile)
        run: |
          old=${{ env.latest_tag }}
          new=${{ steps.bump.outputs.new_tag }}
          old_no_v="${old#v}"
          new_no_v="${new#v}"

          echo "Replacing $old → $new and $old_no_v → $new_no_v"

          find . -type f \
            ! -name 'Dockerfile' \
            ! -name 'Dockerfile.*' \
            -exec grep -l "$old\|$old_no_v" {} + |
            xargs sed -i "s/$old/$new/g; s/$old_no_v/$new_no_v/g"

      - name: Commit version bump
        run: |
          branch="version-bump-${{ steps.bump.outputs.new_tag }}"

          git config user.name "kyrikakis-release-bot[bot]"
          git config user.email "kyrikakis-release-bot[bot]@users.noreply.github.com"

          git checkout -b "$branch"
          git commit -am "Bump version to ${{ steps.bump.outputs.new_tag }}"
          git push https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/${{ github.repository }} "$branch"

      - name: Create Pull Request via REST API
        env:
            GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
            response=$(curl -s -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d @- <<EOF
            {
                "title": "Bump version to ${{ steps.bump.outputs.new_tag }}",
                "head": "version-bump-${{ steps.bump.outputs.new_tag }}",
                "base": "main",
                "body": "This PR updates all version references to ${{ steps.bump.outputs.new_tag }}."
            }
            EOF
            )
            echo "$response"
            echo "pr_number=$(echo "$response" | jq -r .number)" >> "$GITHUB_OUTPUT"

      - name: Add auto-merge label
        uses: actions-ecosystem/action-add-labels@v1
        with:
            github_token: ${{ steps.app-token.outputs.token }}
            number: ${{ steps.create_pr.outputs.pr_number }}
            labels: auto-merge
